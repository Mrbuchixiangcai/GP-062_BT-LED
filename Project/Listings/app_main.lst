C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE APP_MAIN
OBJECT MODULE PLACED IN ..\Object\app_main.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE ..\Hardware\app_main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\U
                    -ser;..\Hardware;..\Hardware\BT;..\Hardware\KEY;..\Hardware\LED;..\Hardware\SystemSleep) DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\app_main.lst) OBJECT(..\Object\app_main.obj)

line level    source

   1          /*******************************************************************************
   2          *说明：LED控制说明：
   3          *          "P2 = 0x02;P3 = 0x07;"：这是4个“七段数码管”第二个位的后四段亮，
   4          *          "P2 = 0x02;P3 = ~0x07;"：这是4个“七段数码管”第二个位的前三段亮，
   5          *          即是低电平导通，因为P2给高电平
   6          ********************************************************************************/
   7          
   8          /*************************************************************/
   9          /*头文件Header File*******************************************/
  10          /*************************************************************/
  11          #include "app_main.h"
  12          
  13          /*************************************************************/
  14          /*宏定义Macro Definition**************************************/
  15          /*************************************************************/
  16          
  17          /*************************************************************/
  18          /*类型定义Byte Definition**************************************/
  19          /*************************************************************/
  20          TIME_TEMP_ST_TypeDef  Time_Temp_TD;
  21          ALRAM_ST_TypeDef  AL1_TD;//闹钟相关
  22          UCT_TIME_E_TypeDef UCT_TD;//时区
  23          
  24          /*************************************************************/
  25          /*标志位定义Flags Definition***********************************/
  26          /*************************************************************/
  27          bit    AppTick0;
  28          bit    AppTick1;
  29          bit    AppTick2;
  30          bit    AppTick3;
  31          bit    AppTick4;
  32          bit    AppTick5;
  33          bit    AppTick1ms;
  34          
  35          bit    Flag_12HourDisplay;
  36          bit    Flag_0_5s; //0.5s
  37          bit    Flag_LeapYear;//闰年标志，1为闰年，0为平年
  38          BOOL   Flag_PowerOn;//开关机状态，1为开机
  39          BOOL   gbDispleyFull;//显示满，1为满
  40          BOOL   SleepEnable;
  41          
  42          uint8_t idata Flag_DayFull_Add1Month;//每个月过完就加1月值，
  43          uint8_t idata Flag_MonthFull_Add1Year;//每年过完就加1年值，
  44          
  45          uint8_t idata Flag_ZoneStart;
  46          uint8_t idata Flag_ZoneStop;
  47          
  48          /*************************************************************/
  49          /*变量定义Variable Definition**********************************/
  50          /*************************************************************/
  51          uint8_t  idata cntAppTick;
  52          
  53          BOOL               gRTC_HalfSecond;
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 2   

  54          uint8_t  idata gRTC_Sec;//RTC数据 
  55          uint8_t  idata gRTC_Sec_bk;
  56          char     idata gRTC_Minute;
  57          uint8_t  idata gRTC_Minute_bk;
  58          uint8_t  idata gRTC_Hour;
  59          uint8_t  idata gRTC_Hour_bk;
  60          uint8_t  idata gRTC_Hour_bk_24;//计数24小时
  61          uint8_t  idata gRTC_Day;
  62          uint8_t  idata gRTC_Day_bk;
  63          uint8_t  idata gRTC_Month;
  64          uint8_t  idata gRTC_Month_bk;
  65          uint8_t  idata gRTC_Year;
  66          uint8_t  idata gRTC_Year_bk;
  67          uint8_t  idata gRTC_Zone;
  68          uint8_t  idata gRTC_Zone_bk;
  69          uint8_t  idata gRTC_Week; //一周7天
  70          uint8_t  idata cntNoFlash;
  71          uint8_t            gbDimmer;//亮度
  72          uint8_t  idata cnt0_5s;//计数到500ms就反转Flag_0_5s
  73          
  74          uint8_t  idata sys_Volume;
  75          uint8_t  idata cntBeep;//闹钟响时并且为beep模式
  76          uint8_t  idata cntAlarmRuningMinuteOFF;//闹钟响多少分钟关闭
  77          
  78          
  79          /*************************************************************/
  80          /*数组定义Array Definition************************************/
  81          /*************************************************************/
  82          
  83          /*************************************************************/
  84          /*函数声明Function Declaration*********************************/
  85          /*************************************************************/
  86          
  87          /*************************************************************/
  88          /*函数定义Function Definition**********************************/
  89          /*************************************************************/
  90          /*******************************************************************************
  91          * 函数原型：
  92          * 输入参数：
  93          * 输出参数：
  94          * 函数功能：关闭闹铃打包多条语句
  95          * 返回值说明：
  96          * 创建日期：
  97          * 创建人：
  98          * 修改日期
  99          * 修改人：
 100          * 第N次修改：
 101          * 修改原因：
 102          * 备注：
 103          *******************************************************************************/
 104          void Alarm1PowerOFF(void)
 105          {
 106   1              AL1_TD.OnOff_TD = ALARM_OFF;//闹钟开关，关
 107   1              AL1_TD.RingRun_TD = ALARM_RING_RUN_OFF;//闹钟运行状态，关
 108   1              AL1_TD.Snooze_TD=ALARM_SNOOZE_OFF;//闹钟贪睡模式，没有贪睡
 109   1              _BEEP_MUTE(0);
 110   1              BUZ_OnOff(0);
 111   1              cntBeep=0;
 112   1      }
 113          
 114          /*******************************************************************************
 115          * 函数原型：
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 3   

 116          * 输入参数：
 117          * 输出参数：
 118          * 函数功能：退出显示计数
 119          * 返回值说明：
 120          * 创建日期：
 121          * 创建人：
 122          * 修改日期
 123          * 修改人：
 124          * 第N次修改：
 125          * 修改原因：
 126          * 备注：
 127          *******************************************************************************/
 128          void DisplayStatusExit(void)
 129          {
 130   1              if (cntDisplayStatus)
 131   1              {
 132   2                      if (++cnt0_5s >= cDISP_DELAY_500ms)//10ms调用一次，计数到500ms就进入
 133   2                      {
 134   3                              cnt0_5s = 0;
 135   3                              Flag_0_5s = ~Flag_0_5s;
 136   3                              if(Flag_0_5s)  //每当Flag_0_5s为1，Flag_Year_0_5s_Disp就反转，这样就是1s反转一次
 137   3                                      Flag_Year_0_5s_Disp=~Flag_Year_0_5s_Disp;
 138   3                      }
 139   2                      if (--cntDisplayStatus == 0)
 140   2                      {
 141   3                              switch (Flag_DisplayStatus)
 142   3                              {
 143   4                                      case DISP_CLK:
 144   4                                              break;
 145   4                                      default:
 146   4                                              cntDisplayStatus = cDISP_DELAY_60ms;
 147   4                                              Flag_DisplayStatus = DISP_CLK;
 148   4                                              break;
 149   4                              }
 150   3                      }
 151   2              }
 152   1      }
 153          
 154          /*******************************************************************************
 155          * 函数原型：
 156          * 输入参数：
 157          * 输出参数：
 158          * 函数功能：时间比较，每秒钟进来一次
 159          * 返回值说明：
 160          * 创建日期：
 161          * 创建人：
 162          * 修改日期
 163          * 修改人：
 164          * 第N次修改：
 165          * 修改原因：
 166          * 备注：
 167          *******************************************************************************/
 168          void Compare_1MinutePorc(void)
 169          {
 170   1              //static uint8_t  cntSetVolume; //此变量只在上电时初始化一次，再调用此函数时不会执行此语句
 171   1              /*******************************************************************************
 172   1               *功能：
 173   1               *
 174   1               *这里是1s进来一次
 175   1               *******************************************************************************/
 176   1              if(gRTC_Sec!=gRTC_Sec_bk)
 177   1              {
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 4   

 178   2                      gRTC_Sec_bk=gRTC_Sec;
 179   2                      
 180   2                      /*******************************************************************************
 181   2                       *功能：
 182   2                       *
 183   2                       *这里是1s进来一次
 184   2                       *******************************************************************************/
 185   2                      if(gRTC_Minute!=gRTC_Minute_bk)//分钟
 186   2                      {
 187   3                              gRTC_Minute_bk=gRTC_Minute;
 188   3                              
 189   3                              /*******************************************************************************
 190   3                               *功能：闹钟开启并且hour和minute相等，闹钟响应
 191   3                               *      因为是24小时的实际计时，所以不用判断上午下午
 192   3                               *******************************************************************************/
 193   3                              if((AL1_TD.OnOff_TD==ALARM_ON) && (AL1_TD.hour==gRTC_Hour) && (AL1_TD.minute==gRTC_Minute))
 194   3                              {
 195   4                                      if(AL1_TD.RingRun_TD==ALARM_RING_RUN_OFF)//
 196   4                                      {
 197   5                                              AL1_TD.RingRun_TD=ALARM_RING_RUN_ON;//把闹钟运行状态设为ON
 198   5                                              if(Flag_BT_Play_Payse==1)
 199   5                                              {
 200   6                                                      bt_cmd=BT_PLAY_PAUSE;
 201   6                                              }
 202   5                                      }
 203   4                              }
 204   3                              
 205   3                              /*******************************************************************************
 206   3                               *功能：闹钟开启&&在运行&&贪睡时间和RTC时间相等&&贪睡模式开
 207   3                               *
 208   3                               *******************************************************************************/
 209   3                              if((AL1_TD.OnOff_TD==ALARM_ON) && (AL1_TD.RingRun_TD==ALARM_RING_RUN_ON) && (AL1_TD.Snooze_TD == ALARM_
             -SNOOZE_ON)
 210   3                               && (AL1_TD.snoozeRTCHour==gRTC_Hour) && (AL1_TD.snoozeRTCMinute==gRTC_Minute))
 211   3                              {
 212   4                                      AL1_TD.Snooze_TD = ALARM_SNOOZE_OFF;//再次开启贪睡
 213   4                              }
 214   3                              
 215   3                              /*******************************************************************************
 216   3                               *功能：闹钟如果已经开启，并且在运行，计数30分钟关闭，无论是否是贪睡模式
 217   3                               *
 218   3                               *******************************************************************************/
 219   3                              if((AL1_TD.OnOff_TD == ALARM_ON) && (AL1_TD.RingRun_TD == ALARM_RING_RUN_ON))//闹钟已经开启，并且在运行
             -,
 220   3                              {
 221   4                                      cntAlarmRuningMinuteOFF++;
 222   4                                      if(cntAlarmRuningMinuteOFF>=30)//30分钟到了
 223   4                                      {
 224   5                                              Alarm1PowerOFF();
 225   5                                      }
 226   4                              }
 227   3                              
 228   3                              /*******************************************************************************
 229   3                               *功能：
 230   3                               *
 231   3                               *这里是1hour进来一次
 232   3                               *******************************************************************************/
 233   3                              if(gRTC_Hour!=gRTC_Hour_bk)//小时
 234   3                              {
 235   4                                      gRTC_Hour_bk=gRTC_Hour_bk;
 236   4                                      gRTC_Hour_bk_24++;
 237   4                                      if(gRTC_Hour_bk_24>=24)
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 5   

 238   4                                      {
 239   5                                              gRTC_Hour_bk_24=0;
 240   5                                              
 241   5                                      }
 242   4                              }
 243   3                      }
 244   2              }
 245   1              
 246   1              if((AL1_TD.OnOff_TD == ALARM_ON) && (AL1_TD.RingRun_TD == ALARM_RING_RUN_ON))//闹钟已经开启，并且在运行,
 247   1              {
 248   2                      if(AL1_TD.Snooze_TD == ALARM_SNOOZE_OFF)//闹钟如果不在贪睡模式
 249   2                      {
 250   3                              _BEEP_MUTE(1);//解mute
 251   3                              P1 |= 0x40;
 252   3                              cntBeep++;
 253   3                              if(cntBeep<40)
 254   3                                      BUZ_OnOff(1);
 255   3                              else if((cntBeep>=40) && (cntBeep<80))
 256   3                                      BUZ_OnOff(0);
 257   3                              else 
 258   3                                      cntBeep=0;
 259   3                      }
 260   2                      else if(AL1_TD.Snooze_TD == ALARM_SNOOZE_ON)//闹钟如果在贪睡模式
 261   2                      {
 262   3                              cntBeep=0;
 263   3                              _BEEP_MUTE(0);//因为是闹钟开启并且在运行状态，所以不会影响其他时间的蓝牙播放
 264   3                              BUZ_OnOff(0);
 265   3                      }
 266   2              }
 267   1              
 268   1              /*******************************************************************************
 269   1              *功能：gRTC_Zone1-7,选择对应的时区
 270   1              *
 271   1              ********************************************************************************/
 272   1              if(gRTC_Zone==1)
 273   1                      UCT_TD=UTC_SUB_10;
 274   1              else if(gRTC_Zone==2)
 275   1                      UCT_TD=UTC_SUB_9;
 276   1              else if(gRTC_Zone==3)
 277   1                      UCT_TD=UTC_SUB_8;
 278   1              else if(gRTC_Zone==4)
 279   1                      UCT_TD=UTC_SUB_7;
 280   1              else if(gRTC_Zone==5)
 281   1                      UCT_TD=UTC_SUB_6;
 282   1              else if(gRTC_Zone==6)
 283   1                      UCT_TD=UTC_SUB_5;
 284   1              else if(gRTC_Zone==7)
 285   1                      UCT_TD=UTC_SUB_4;
 286   1      }
 287          /*******************************************************************************
 288          *功能：闹钟开启，并且已经响应
 289          *这里是10ms进来一次
 290          *******************************************************************************/
 291          void AlarmRunning(void)
 292          {
 293   1              
 294   1      }
 295          
 296          /*******************************************************************************
 297          * 函数原型：
 298          * 输入参数：
 299          * 输出参数：
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 6   

 300          * 函数功能：滴答定时器计时函数
 301          * 返回值说明：
 302          * 创建日期：
 303          * 创建人：
 304          * 修改日期
 305          * 修改人：
 306          * 第N次修改：
 307          * 修改原因：
 308          * 备注：
 309          *******************************************************************************/
 310          void Sys_Tick(void)
 311          {
 312   1              AppTick1ms=1;
 313   1              if(cntAppTick==0)
 314   1                      AppTick0=1;
 315   1              if(cntAppTick==1)
 316   1                      AppTick1=1;
 317   1              if(cntAppTick==2)
 318   1                      AppTick2=1;
 319   1              if(cntAppTick==3)
 320   1                      AppTick3=1;
 321   1              if(cntAppTick==4)
 322   1                      AppTick4=1;
 323   1              if(cntAppTick==5)
 324   1                      AppTick5=1;
 325   1              if(cntAppTick==6)
 326   1              {
 327   2                      if((--uart1_TX_Timeout)==0)//发送超时就清零发送标志位
 328   2                              uart1_EnableSend=0;
 329   2                      if((--uart1_RX_Timeout)==0)
 330   2                              uart1_RX_Pointer=0;
 331   2              }
 332   1              if(++cntAppTick>=10)
 333   1              {
 334   2                      cntAppTick=0;
 335   2              }
 336   1      }
 337          
 338          /*******************************************************************************
 339          * 函数原型：
 340          * 输入参数：
 341          * 输出参数：
 342          * 函数功能：初始化函数
 343          * 返回值说明：
 344          * 创建日期：
 345          * 创建人：
 346          * 修改日期
 347          * 修改人：
 348          * 第N次修改：
 349          * 修改原因：
 350          * 备注：
 351          *******************************************************************************/
 352          void PowerON_Init(void)
 353          {
 354   1              gRTC_Year=18;     //上电默认2018年
 355   1              gRTC_Month=12;    //上电默认12月
 356   1              gRTC_Day=1;               //上电默认为1号
 357   1              gRTC_Week=6;      //12月号是周六
 358   1              gRTC_Hour=0;      //上电默认为凌晨零点零分零秒
 359   1              gRTC_Minute=0;    //上电默认为
 360   1              gRTC_Sec=0;               //上电默认为
 361   1              gRTC_Hour_bk=0;   //上电默认为凌晨零点零分零秒
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 7   

 362   1              gRTC_Minute_bk=0; //上电默认为
 363   1              gRTC_Sec_bk=0;    //上电默认为
 364   1              Flag_LeapYear=0;  //2018年不是闰年
 365   1              Flag_12HourDisplay=1;//12小时制
 366   1              gRTC_Zone=6;      //所在时区，初始化为华盛顿特区时间,西五区
 367   1              UCT_TD=UTC_SUB_5; //所在时区，初始化为华盛顿特区时间,西五区
 368   1              
 369   1              cntNoFlash = 0;
 370   1              cnt0_5s=0;
 371   1              Flag_PowerOn = 1;
 372   1              gbDimmer=18;
 373   1              AL1_TD.snoozeTime=10;//默认为10分钟
 374   1      
 375   1              
 376   1      //      gRTC_Hour=23;
 377   1      //      gRTC_Minute=39;
 378   1      //      AL1_TD.OnOff_TD = ALARM_ON;
 379   1      //      AL1_TD.hour=0;
 380   1      //      AL1_TD.minute=10;
 381   1      }
 382          
 383          /*******************************************************************************
 384          * 函数原型：
 385          * 输入参数：
 386          * 输出参数：
 387          * 函数功能：app_main函数
 388          * 返回值说明：
 389          * 创建日期：
 390          * 创建人：
 391          * 修改日期
 392          * 修改人：
 393          * 第N次修改：
 394          * 修改原因：
 395          * 备注：
 396          *******************************************************************************/
 397          void app_main(void)
 398          {
 399   1              PowerON_Init();
 400   1              CheckDC();
 401   1              while(1)
 402   1              {
 403   2                      if(AppTick1ms)
 404   2                      {
 405   3                              AppTick1ms=0;
 406   3                              CheckDC();
 407   3                      }
 408   2                      if(AppTick0)
 409   2                      {
 410   3                              AppTick0=0;
 411   3                              KeyScan();
 412   3                              KeyComMsg();
 413   3                      }
 414   2                      if((AppTick1) || (AppTick2))
 415   2                      {
 416   3                              AppTick1=0;
 417   3                              AppTick2=0;
 418   3                              BlueMode_Handle();
 419   3                              
 420   3                      }
 421   2                      if(AppTick3)
 422   2                      {
 423   3                              AppTick3=0;
C51 COMPILER V9.00   APP_MAIN                                                              12/10/2018 10:01:33 PAGE 8   

 424   3                              Display();
 425   3                              //AlarmRunning();
 426   3                              //P1 |= 0x40;
 427   3                      }
 428   2                      if(AppTick4)
 429   2                      {
 430   3                              AppTick4=0;
 431   3                              DisplayStatusExit();
 432   3                      }
 433   2                      if(AppTick5)
 434   2                      {
 435   3                              AppTick5=0;
 436   3                              //Timing_Handle();
 437   3                              Compare_1MinutePorc();
 438   3                      }
 439   2              }
 440   1      }
 441          
 442          
 443          
 444          
 445          
 446          
 447          
 448          
 449          
 450          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    538    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =     26    ----
   BIT SIZE         =     14    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
