C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE APP_MAIN
OBJECT MODULE PLACED IN ..\Object\app_main.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE ..\Hardware\app_main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\U
                    -ser;..\Hardware;..\Hardware\BT;..\Hardware\KEY;..\Hardware\LED;..\Hardware\SystemSleep) DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\app_main.lst) OBJECT(..\Object\app_main.obj)

line level    source

   1          /*******************************************************************************
   2          *说明：LED控制说明：
   3          *          "P2 = 0x02;P3 = 0x07;"：这是4个“七段数码管”第二个位的后四段亮，
   4          *          "P2 = 0x02;P3 = ~0x07;"：这是4个“七段数码管”第二个位的前三段亮，
   5          *          即是低电平导通，因为P2给高电平
   6          ********************************************************************************/
   7          
   8          /*************************************************************/
   9          /*头文件Header File*******************************************/
  10          /*************************************************************/
  11          #include "app_main.h"
  12          
  13          /*************************************************************/
  14          /*宏定义Macro Definition**************************************/
  15          /*************************************************************/
  16          
  17          /*************************************************************/
  18          /*类型定义Byte Definition**************************************/
  19          /*************************************************************/
  20          TIME_TEMP_ST_TypeDef  Time_Temp_TD;
  21          ALRAM_ST_TypeDef  AL1_TD;//闹钟相关
  22          
  23          /*************************************************************/
  24          /*标志位定义Flags Definition***********************************/
  25          /*************************************************************/
  26          bit    AppTick0;
  27          bit    AppTick1;
  28          bit    AppTick2;
  29          bit    AppTick3;
  30          bit    AppTick4;
  31          bit    AppTick5;
  32          bit    AppTick1ms;
  33          
  34          bit    Flag_12HourDisplay;
  35          bit    Flag_0_5s; //0.5s
  36          bit    Flag_LeapYear;//闰年标志，1为闰年，0为平年
  37          BOOL   Flag_PowerOn;//开关机状态，1为开机
  38          BOOL   gbDispleyFull;//显示满，1为满
  39          BOOL   SleepEnable;
  40          
  41          /*************************************************************/
  42          /*变量定义Variable Definition**********************************/
  43          /*************************************************************/
  44          uint8_t  idata cntAppTick;
  45          
  46          BOOL               gRTC_HalfSecond;
  47          uint8_t  idata gRTC_Sec;//RTC数据 
  48          uint8_t  idata gRTC_Sec_bk;
  49          uint8_t  idata gRTC_Minute;
  50          uint8_t  idata gRTC_Minute_bk;
  51          uint8_t  idata gRTC_Hour;
  52          uint8_t  idata gRTC_Hour_bk;
  53          uint8_t  idata gRTC_Hour_bk_24;//计数24小时
C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 2   

  54          uint8_t  idata gRTC_Day;
  55          uint8_t  idata gRTC_Day_bk;
  56          uint8_t  idata gRTC_Month;
  57          uint8_t  idata gRTC_Month_bk;
  58          uint8_t  idata gRTC_Year;
  59          uint8_t  idata gRTC_Year_bk;
  60          uint8_t  idata gRTC_Zone;
  61          uint8_t  idata gRTC_Zone_bk;
  62          uint8_t  idata gRTC_Week; //一周7天
  63          uint8_t  idata cntNoFlash;
  64          uint8_t            gbDimmer;//亮度
  65          uint8_t  idata cnt0_5s;//计数到500ms就反转Flag_0_5s
  66          
  67          uint8_t  idata sys_Volume;
  68          uint8_t  idata cntBeep;//闹钟响时并且为beep模式
  69          uint8_t  idata cntAlarmRuningMinuteOFF;//闹钟响多少分钟关闭
  70          
  71          
  72          /*************************************************************/
  73          /*数组定义Array Definition************************************/
  74          /*************************************************************/
  75          
  76          /*************************************************************/
  77          /*函数声明Function Declaration*********************************/
  78          /*************************************************************/
  79          
  80          /*************************************************************/
  81          /*函数定义Function Definition**********************************/
  82          /*************************************************************/
  83          /*******************************************************************************
  84          * 函数原型：
  85          * 输入参数：
  86          * 输出参数：
  87          * 函数功能：关闭闹铃打包多条语句
  88          * 返回值说明：
  89          * 创建日期：
  90          * 创建人：
  91          * 修改日期
  92          * 修改人：
  93          * 第N次修改：
  94          * 修改原因：
  95          * 备注：
  96          *******************************************************************************/
  97          void Alarm1PowerOFF(void)
  98          {
  99   1              AL1_TD.OnOff_TD = ALARM_OFF;//闹钟开关，关
 100   1              AL1_TD.RingRun_TD = ALARM_RING_RUN_OFF;//闹钟运行状态，关
 101   1              AL1_TD.Snooze_TD=ALARM_SNOOZE_OFF;//闹钟贪睡模式，没有贪睡
 102   1              BUZ_OnOff(0);
 103   1              cntBeep=0;
 104   1      }
 105          
 106          /*******************************************************************************
 107          * 函数原型：
 108          * 输入参数：
 109          * 输出参数：
 110          * 函数功能：退出显示计数
 111          * 返回值说明：
 112          * 创建日期：
 113          * 创建人：
 114          * 修改日期
 115          * 修改人：
C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 3   

 116          * 第N次修改：
 117          * 修改原因：
 118          * 备注：
 119          *******************************************************************************/
 120          void DisplayStatusExit(void)
 121          {
 122   1              if (cntDisplayStatus)
 123   1              {
 124   2                      if (++cnt0_5s >= cDISP_DELAY_500ms)//10ms调用一次，计数到500ms就进入
 125   2                      {
 126   3                              cnt0_5s = 0;
 127   3                              Flag_0_5s = ~Flag_0_5s;
 128   3                              if(Flag_0_5s)  //每当Flag_0_5s为1，Flag_Year_0_5s_Disp就反转，这样就是1s反转一次
 129   3                                      Flag_Year_0_5s_Disp=~Flag_Year_0_5s_Disp;
 130   3                      }
 131   2                      if (--cntDisplayStatus == 0)
 132   2                      {
 133   3                              switch (Flag_DisplayStatus)
 134   3                              {
 135   4                                      case DISP_CLK:
 136   4                                              break;
 137   4                                      default:
 138   4                                              cntDisplayStatus = cDISP_DELAY_60ms;
 139   4                                              Flag_DisplayStatus = DISP_CLK;
 140   4                                              break;
 141   4                              }
 142   3                      }
 143   2              }
 144   1      }
 145          
 146          /*******************************************************************************
 147          * 函数原型：
 148          * 输入参数：
 149          * 输出参数：
 150          * 函数功能：时间比较，每秒钟进来一次
 151          * 返回值说明：
 152          * 创建日期：
 153          * 创建人：
 154          * 修改日期
 155          * 修改人：
 156          * 第N次修改：
 157          * 修改原因：
 158          * 备注：
 159          *******************************************************************************/
 160          void Compare_1MinutePorc(void)
 161          {
 162   1              //static uint8_t  cntSetVolume; //此变量只在上电时初始化一次，再调用此函数时不会执行此语句
 163   1              /*******************************************************************************
 164   1               *功能：
 165   1               *
 166   1               *这里是1s进来一次
 167   1               *******************************************************************************/
 168   1              if(gRTC_Sec!=gRTC_Sec_bk)
 169   1              {
 170   2                      gRTC_Sec_bk=gRTC_Sec;
 171   2                      
 172   2                      /*******************************************************************************
 173   2                       *功能：
 174   2                       *
 175   2                       *这里是1s进来一次
 176   2                       *******************************************************************************/
 177   2                      if(gRTC_Minute!=gRTC_Minute_bk)//分钟
C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 4   

 178   2                      {
 179   3                              gRTC_Minute_bk=gRTC_Minute;
 180   3                              
 181   3                              /*******************************************************************************
 182   3                               *功能：闹钟开启并且hour和minute相等，闹钟响应
 183   3                               *      因为是24小时的实际计时，所以不用判断上午下午
 184   3                               *******************************************************************************/
 185   3                              if((AL1_TD.OnOff_TD==ALARM_ON) && (AL1_TD.hour==gRTC_Hour) && (AL1_TD.minute==gRTC_Minute))
 186   3                              {
 187   4                                      if(AL1_TD.RingRun_TD==ALARM_RING_RUN_OFF)//
 188   4                                      {
 189   5                                              AL1_TD.RingRun_TD=ALARM_RING_RUN_ON;//把闹钟运行状态设为ON
 190   5                                      }
 191   4                              }
 192   3                              
 193   3                              /*******************************************************************************
 194   3                               *功能：闹钟开启&&在运行&&贪睡时间和RTC时间相等&&贪睡模式开
 195   3                               *
 196   3                               *******************************************************************************/
 197   3                              if((AL1_TD.OnOff_TD==ALARM_ON) && (AL1_TD.RingRun_TD==ALARM_RING_RUN_ON) && (AL1_TD.Snooze_TD == ALARM_
             -SNOOZE_ON)
 198   3                               && (AL1_TD.snoozeHour==gRTC_Hour) && (AL1_TD.snoozeMinute=gRTC_Minute))
 199   3                              {
 200   4                                      AL1_TD.Snooze_TD = ALARM_SNOOZE_OFF;//再次开启贪睡
 201   4                              }
 202   3                              
 203   3                              /*******************************************************************************
 204   3                               *功能：闹钟如果已经开启，并且在运行，计数30分钟关闭，无论是否是贪睡模式
 205   3                               *
 206   3                               *******************************************************************************/
 207   3                              if((AL1_TD.OnOff_TD == ALARM_ON) && (AL1_TD.RingRun_TD == ALARM_RING_RUN_ON))//闹钟已经开启，并且在运行
             -,
 208   3                              {
 209   4                                      cntAlarmRuningMinuteOFF++;
 210   4                                      if(cntAlarmRuningMinuteOFF>=30)//30分钟到了
 211   4                                      {
 212   5                                              Alarm1PowerOFF();
 213   5                                      }
 214   4                              }
 215   3                              
 216   3                              /*******************************************************************************
 217   3                               *功能：
 218   3                               *
 219   3                               *这里是1hour进来一次
 220   3                               *******************************************************************************/
 221   3                              if(gRTC_Hour!=gRTC_Hour_bk)//小时
 222   3                              {
 223   4                                      gRTC_Hour_bk=gRTC_Hour_bk;
 224   4                                      gRTC_Hour_bk_24++;
 225   4                                      if(gRTC_Hour_bk_24>=24)
 226   4                                      {
 227   5                                              gRTC_Hour_bk_24=0;
 228   5                                              
 229   5                                      }
 230   4                              }
 231   3                      }
 232   2              }
 233   1              
 234   1              /*******************************************************************************
 235   1              *功能：闹钟开启，并且已经响应
 236   1              *这里是10ms进来一次
 237   1              *******************************************************************************/
C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 5   

 238   1              if((AL1_TD.OnOff_TD == ALARM_ON) && (AL1_TD.RingRun_TD == ALARM_RING_RUN_ON))//闹钟已经开启，并且在运行,
 239   1              {
 240   2                      if(AL1_TD.Snooze_TD == ALARM_SNOOZE_OFF)//闹钟如果不在贪睡模式
 241   2                      {
 242   3                              cntBeep++;
 243   3                              if(cntBeep<40)
 244   3                                      BUZ_OnOff(1);
 245   3                              else if((cntBeep>=40) && (cntBeep<80))
 246   3                                      BUZ_OnOff(0);
 247   3                              else 
 248   3                                      cntBeep=0;
 249   3                      }
 250   2                      else if(AL1_TD.Snooze_TD == ALARM_SNOOZE_ON)//闹钟如果在贪睡模式
 251   2                      {
 252   3                              cntBeep=0;
 253   3                              BUZ_OnOff(0);
 254   3                      }
 255   2              }
 256   1      }
 257          
 258          /*******************************************************************************
 259          * 函数原型：
 260          * 输入参数：
 261          * 输出参数：
 262          * 函数功能：滴答定时器计时函数
 263          * 返回值说明：
 264          * 创建日期：
 265          * 创建人：
 266          * 修改日期
 267          * 修改人：
 268          * 第N次修改：
 269          * 修改原因：
 270          * 备注：
 271          *******************************************************************************/
 272          void Sys_Tick(void)
 273          {
 274   1              AppTick1ms=1;
 275   1              if(cntAppTick==0)
 276   1                      AppTick0=1;
 277   1              if(cntAppTick==1)
 278   1                      AppTick1=1;
 279   1              if(cntAppTick==2)
 280   1                      AppTick2=1;
 281   1              if(cntAppTick==3)
 282   1                      AppTick3=1;
 283   1              if(cntAppTick==4)
 284   1                      AppTick4=1;
 285   1              if(cntAppTick==5)
 286   1                      AppTick5=1;
 287   1              if(cntAppTick==6)
 288   1              {
 289   2                      if((--uart1_TX_Timeout)==0)//发送超时就清零发送标志位
 290   2                              uart1_EnableSend=0;
 291   2                      if((--uart1_RX_Timeout)==0)
 292   2                              uart1_RX_Pointer=0;
 293   2              }
 294   1              if(++cntAppTick>=10)
 295   1              {
 296   2                      cntAppTick=0;
 297   2              }
 298   1      }
 299          
C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 6   

 300          /*******************************************************************************
 301          * 函数原型：
 302          * 输入参数：
 303          * 输出参数：
 304          * 函数功能：初始化函数
 305          * 返回值说明：
 306          * 创建日期：
 307          * 创建人：
 308          * 修改日期
 309          * 修改人：
 310          * 第N次修改：
 311          * 修改原因：
 312          * 备注：
 313          *******************************************************************************/
 314          void PowerON_Init(void)
 315          {
 316   1              gRTC_Year=18;   //上电默认2018年
 317   1              gRTC_Month=12;  //上电默认12月
 318   1              gRTC_Day=1;             //上电默认为1号
 319   1              gRTC_Hour=0;    //上电默认为凌晨零点零分零秒
 320   1              gRTC_Minute=0;  //上电默认为
 321   1              gRTC_Sec=0;             //上电默认为
 322   1              gRTC_Hour_bk=0; //上电默认为凌晨零点零分零秒
 323   1              gRTC_Minute_bk=0;//上电默认为
 324   1              gRTC_Sec_bk=0;  //上电默认为
 325   1              Flag_LeapYear=0;//2018年不是闰年
 326   1              Flag_12HourDisplay=1;//12小时制
 327   1              
 328   1              cntNoFlash = 0;
 329   1              cnt0_5s=0;
 330   1              Flag_PowerOn = 1;
 331   1              gbDimmer=18;
 332   1              
 333   1      //      AL1_TD.OnOff_TD = ALARM_ON;
 334   1      //      AL1_TD.hour=0;
 335   1      //      AL1_TD.minute=15;
 336   1      }
 337          
 338          /*******************************************************************************
 339          * 函数原型：
 340          * 输入参数：
 341          * 输出参数：
 342          * 函数功能：app_main函数
 343          * 返回值说明：
 344          * 创建日期：
 345          * 创建人：
 346          * 修改日期
 347          * 修改人：
 348          * 第N次修改：
 349          * 修改原因：
 350          * 备注：
 351          *******************************************************************************/
 352          void app_main(void)
 353          {
 354   1              PowerON_Init();
 355   1              CheckDC();
*** WARNING C206 IN LINE 355 OF ..\HARDWARE\APP_MAIN.C: 'CheckDC': missing function-prototype
 356   1              while(1)
 357   1              {
 358   2                      if(AppTick1ms)
 359   2                      {
 360   3                              AppTick1ms=0;
C51 COMPILER V9.00   APP_MAIN                                                              12/06/2018 14:29:13 PAGE 7   

 361   3                              CheckDC();
 362   3                      }
 363   2                      if(AppTick0)
 364   2                      {
 365   3                              AppTick0=0;
 366   3                              KeyScan();
 367   3                              KeyComMsg();
 368   3                      }
 369   2                      if((AppTick1) || (AppTick2))
 370   2                      {
 371   3                              AppTick1=0;
 372   3                              AppTick2=0;
 373   3                              BlueMode_Handle();
 374   3                              
 375   3                      }
 376   2                      if(AppTick3)
 377   2                      {
 378   3                              AppTick3=0;
 379   3                              Display();
 380   3                      }
 381   2                      if(AppTick4)
 382   2                      {
 383   3                              AppTick4=0;
 384   3                              DisplayStatusExit();
 385   3                      }
 386   2                      if(AppTick5)
 387   2                      {
 388   3                              AppTick5=0;
 389   3                              //Timing_Handle();
 390   3                              Compare_1MinutePorc();
 391   3                      }
 392   2              }
 393   1      }
 394          
 395          
 396          
 397          
 398          
 399          
 400          
 401          
 402          
 403          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    440    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =     22    ----
   BIT SIZE         =     14    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
