C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE KEY_MODE
OBJECT MODULE PLACED IN ..\Object\Key_Mode.obj
COMPILER INVOKED BY: D:\ProgramFiles\Keil_v5\C51\BIN\C51.EXE ..\Hardware\KEY\Key_Mode.c OPTIMIZE(8,SPEED) BROWSE INCDIR(
                    -..\User;..\Hardware;..\Hardware\BT;..\Hardware\KEY;..\Hardware\LED;..\Hardware\SystemSleep) DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\Key_Mode.lst) OBJECT(..\Object\Key_Mode.obj)

line level    source

   1          /*************************************************************/
   2          /*Í·ÎÄ¼þHeader File*******************************************/
   3          /*************************************************************/
   4          #include "app_main.h"
   5          #include "key_mode.h"
   6          
   7          /*************************************************************/
   8          /*ºê¶¨ÒåMacro Definition**************************************/
   9          /*************************************************************/
  10          
  11          /*************************************************************/
  12          /*ÀàÐÍ¶¨ÒåByte Definition**************************************/
  13          /*************************************************************/
  14          
  15          /*************************************************************/
  16          /*±êÖ¾Î»¶¨ÒåFlags Definition***********************************/
  17          /*************************************************************/
  18          
  19          /*************************************************************/
  20          /*±äÁ¿¶¨ÒåVariable Definition**********************************/
  21          /*************************************************************/
  22          uint8_t  gbKeyPress; //°´¼ü°´ÏÂ
  23          uint8_t  gbKeyNone;  //Ã»ÓÐ°´¼ü°´ÏÂ
  24          uint8_t  KeyValue;   //°´¼üÖµ
  25          uint8_t  KeyEvent;   //°´¼üÊÂ¼þ
  26          uint8_t  cntKeyLoop; //¼ÆÊý°´¼üÑ­»·£¬¶Ì°´£¬³¤°´£¬³¬³¤°´µÄ°´ÏÂÊ±¼ä
  27          uint8_t  cntKeyLong;
  28          uint8_t  KeyCurValueBK;//ÏÖÔÚ°´¼ü±¸·Ý
  29          uint8_t  KeyCurValue;//°´¼üÏÖÔÚÖµ
  30          uint8_t  KeyLastValue;//°´¼üÉÏÒ»´ÎµÄÖµ
  31          
  32          /*************************************************************/
  33          /*Êý×é¶¨ÒåArray Definition************************************/
  34          /*************************************************************/
  35          
  36          /*************************************************************/
  37          /*º¯ÊýÉùÃ÷Function Declaration*********************************/
  38          /*************************************************************/
  39          
  40          /*************************************************************/
  41          /*º¯Êý¶¨ÒåFunction Definition**********************************/
  42          /*************************************************************/
  43          /*******************************************************************************
  44          * º¯ÊýÔ­ÐÍ£º
  45          * ÊäÈë²ÎÊý£º
  46          * Êä³ö²ÎÊý£º
  47          * º¯Êý¹¦ÄÜ£º»ñÈ¡°´¼üÖµ
  48          * ·µ»ØÖµËµÃ÷£º
  49          * ´´½¨ÈÕÆÚ£º
  50          * ´´½¨ÈË£º
  51          * ÐÞ¸ÄÈÕÆÚ
  52          * ÐÞ¸ÄÈË£º
  53          * µÚN´ÎÐÞ¸Ä£º
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 2   

  54          * ÐÞ¸ÄÔ­Òò£º
  55          * ±¸×¢£º
  56          *******************************************************************************/
  57          uint8_t GetKeyValue(void)
  58          {
  59   1              uint8_t keyNum=0;
  60   1              if(!KEY_ADD_DEC())
  61   1                      keyNum=K_VOLINC;
  62   1              else if(!KEY_SUB_DEC())
  63   1                      keyNum=K_VOLDEC;
  64   1              else if(!KEY_SNOOZE_DEC())
  65   1                      keyNum=K_SNOOZE_DIMMER;
  66   1              else if(!KEY_ALARM_DEC())
  67   1                      keyNum=K_ALARM;
  68   1              if((!KEY_ALARM_DEC()) && (!KEY_SNOOZE_DEC()))//
  69   1                      keyNum=K_AL_SN;
  70   1              
  71   1              return keyNum;
  72   1      }
  73          
  74          /*******************************************************************************
  75          * º¯ÊýÔ­ÐÍ£º
  76          * ÊäÈë²ÎÊý£º
  77          * Êä³ö²ÎÊý£º
  78          * º¯Êý¹¦ÄÜ£º°´¼üÊÂ¼þ´¦Àí
  79          * ·µ»ØÖµËµÃ÷£º
  80          * ´´½¨ÈÕÆÚ£º
  81          * ´´½¨ÈË£º
  82          * ÐÞ¸ÄÈÕÆÚ
  83          * ÐÞ¸ÄÈË£º
  84          * µÚN´ÎÐÞ¸Ä£º
  85          * ÐÞ¸ÄÔ­Òò£º
  86          * ±¸×¢£º
  87          *******************************************************************************/
  88          void KeyEventPorc(uint8_t KeyTmp) //±»µ÷ÓÃÊ±½ÓÊÕµÄÊÇGetKeyValue()µÄ·µ»ØÖµ  Ò»°ã¹Ì¶¨£¬²»¸ü¸Ä
  89          {
  90   1              gbKeyPress=0;
  91   1              if(KeyCurValue!=KeyTmp) //Õâ¸öifÓï¾äÊÇÈ¥¶¶£¬»á±»Ö´ÐÐÁ½´Î£¬µÚÈý´Î½øÀ´Ê±Ö±½ÓÌø¹ý
  92   1              {//KeyTmpÎªÁÙÊ±Öµ£¬
  93   2                      if(KeyCurValueBK!=KeyTmp)
  94   2                              KeyCurValueBK=KeyTmp;
  95   2                      else //µÚ¶þ´Î½øÀ´Ê±Ö´ÐÐÕâÒ»Ìõ
  96   2                              KeyCurValue=KeyTmp; //
  97   2                      return;
  98   2              }
  99   1              if(KeyCurValue==KeyLastValue)
 100   1              {
 101   2                      if((KeyLastValue==0) || (cntKeyLoop==0))
 102   2                              return;
 103   2                      if(--cntKeyLoop==0) //Õâ¸öÔÚµÚ¶þ´Î½øKeyEventPorc()º¯Êý£¨µÚÒ»´Î½ø¡°if(KeyCurValue==KeyLastValue)¡±Ö®Ç°£©Ê
             -±±»ÏÂÃæ¸³ÖµÎª5
 104   2                      { //cntKeyLoopÎª5¾ÍÊÇ50msÊ±¼ä
 105   3                              KeyValue=KeyLastValue; //·À¶¶Ö®ºó°ÑÈ·¶¨µÄ°´¼ü¸³Öµ¸øKeyValue
 106   3                              if(gbKeyNone==0)
 107   3                                      gbKeyPress=1;
 108   3                              switch(KeyEvent)
 109   3                              {
 110   4                                      case 0:
 111   4                                              KeyEvent=1;
 112   4                                              KeyValue |= K_D;
 113   4                                              cntKeyLoop=cKEY_HOLD;
 114   4                                              break;
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 3   

 115   4                                      case 1:
 116   4                                              KeyEvent=2;
 117   4                                              KeyValue |= K_H;
 118   4                                              cntKeyLoop=cKEY_RATE_VOL;
 119   4                                              break;
 120   4                                              case 2:
 121   4                                      case 3:
 122   4                                              KeyEvent=3;
 123   4                                              KeyValue |= K_R;
 124   4                                              cntKeyLoop=cKEY_RATE_VOL;
 125   4                                              if(cntKeyLong<250)
 126   4                                                      cntKeyLong++;
 127   4                                              break;
 128   4                              }
 129   3                      }
 130   2              }
 131   1              else
 132   1              {
 133   2                      if(KeyLastValue)
 134   2                      {
 135   3                              KeyValue=KeyLastValue;
 136   3                              if(gbKeyNone==0)
 137   3                                      gbKeyPress=1;
 138   3                              switch(KeyEvent)
 139   3                              {
 140   4                                      case 1:KeyValue |= K_U; break;
 141   4                                      case 2:KeyValue |= K_LU;break;
 142   4                                      case 3:KeyValue |= K_LU;break;
 143   4                              }
 144   3                              KeyEvent=0;
 145   3                      }
 146   2                      else
 147   2                      {
 148   3                              gbKeyNone=0;
 149   3                              cntKeyLong=0;
 150   3                      }
 151   2                      cntKeyLoop=cKEY_CLICK;
 152   2                      KeyLastValue=KeyCurValue;
 153   2              }
 154   1      }
 155          
 156          /*******************************************************************************
 157          * º¯ÊýÔ­ÐÍ£º
 158          * ÊäÈë²ÎÊý£º
 159          * Êä³ö²ÎÊý£º
 160          * º¯Êý¹¦ÄÜ£ºÖ÷º¯Êýµ÷ÓÃ
 161          * ·µ»ØÖµËµÃ÷£º
 162          * ´´½¨ÈÕÆÚ£º
 163          * ´´½¨ÈË£º
 164          * ÐÞ¸ÄÈÕÆÚ
 165          * ÐÞ¸ÄÈË£º
 166          * µÚN´ÎÐÞ¸Ä£º
 167          * ÐÞ¸ÄÔ­Òò£º
 168          * ±¸×¢£º
 169          *******************************************************************************/
 170          void KeyScan(void) //±»Ö÷º¯Êýµ÷ÓÃ
 171          {
 172   1              KeyEventPorc(GetKeyValue());
 173   1      }
 174          
 175          /*******************************************************************************
 176          * º¯ÊýÔ­ÐÍ£º
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 4   

 177          * ÊäÈë²ÎÊý£º
 178          * Êä³ö²ÎÊý£º
 179          * º¯Êý¹¦ÄÜ£º°´¼ü¶ÔÓ¦´¦Àí
 180          * ·µ»ØÖµËµÃ÷£º
 181          * ´´½¨ÈÕÆÚ£º
 182          * ´´½¨ÈË£º
 183          * ÐÞ¸ÄÈÕÆÚ
 184          * ÐÞ¸ÄÈË£º
 185          * µÚN´ÎÐÞ¸Ä£º
 186          * ÐÞ¸ÄÔ­Òò£º
 187          * ±¸×¢£ºÈòÄêËµÃ÷£º
 188          *               Ä¿Ç°Ê¹ÓÃµÄ¸ñÀï¸ßÀûÀúÈòÄê¹æÔòÈçÏÂ[2]£º
 189          *               ¹«ÔªÄê·Ö³ýÒÔ4²»¿ÉÕû³ý£¬éÆ½Äê¡£
 190          *               ¹«ÔªÄê·Ö³ýÒÔ4¿ÉÕû³ýµ«³ýÒÔ100²»¿ÉÕû³ý£¬ÎªÈòÄê¡£
 191          *               ¹«ÔªÄê·Ö³ýÒÔ100¿ÉÕû³ýµ«³ýÒÔ400²»¿ÉÕû³ý£¬ÎªÆ½Äê¡£
 192          *               ¹«ÔªÄê·Ö³ýÒÔ400¿ÉÕû³ýµ«³ýÒÔ3200²»¿ÉÕû³ý[íÔ´ÕÇó]£¬ÎªÈòÄê¡£
 193          *               ¼ÆËã·½·¨£º*
 194          *               if ((y % 4 == 0 and y % 100 != 0) or (y % 400 == 0 and y % 3200 != 0)):
 195          *                       print("écÄê")
 196          *               else:
 197          *                       print("Æ½Äê")
 198          *******************************************************************************/
 199          void KeyComMsg(void) 
 200          {
 201   1              if(gbKeyPress)
 202   1              { 
 203   2                      switch(KeyValue)
 204   2                      {
 205   3                              case KU(K_VOLINC): //value67 Ã»ÓÐbreakËùÒÔ¼ÌÐøÖ´ÐÐÏÂÒ»ÌõÓï¾ä
 206   3                              case KR(K_VOLINC): //value131
 207   3                              {
 208   4                                      if(Flag_DisplayStatus==0)//Îª0ËµÃ÷²»ÊÇÆäËû²Ù×÷£¬ÊÇÒôÁ¿²Ù×÷
 209   4                                      {
 210   5                                              bt_cmd=BT_VOLINC;
 211   5                                      }
 212   4                                      else
 213   4                                      {
 214   5                                              switch(Flag_DisplayStatus)
 215   5                                              {
 216   6                                                      case ADJ_YEAR: //ÉèÖÃÄê·Ý
 217   6                                                      {
 218   7                                                              if(++gRTC_Year > 99)
 219   7                                                                      gRTC_Year=18;
 220   7                                                              if(gRTC_Month==2)
 221   7                                                              {
 222   8                                                                      if((gRTC_Year % 4) ==0)//ÕâÀïÊýÖµÊÇ2018-2099£¬ËùÒÔ²»ÓÃ"gRTC_Year % 100"
 223   8                                                                      {
 224   9                                                                              Flag_LeapYear=1;//ÈòÄê
 225   9                                                                      }
 226   8                                                                      else
 227   8                                                                      {
 228   9                                                                              Flag_LeapYear=0;
 229   9                                                                      }
 230   8                                                              }
 231   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 232   7                                                              break;
 233   7                                                      }
 234   6                                                      case ADJ_MONTH://ÉèÖÃÔÂ·Ý
 235   6                                                      {
 236   7                                                              if(++gRTC_Month>12)
 237   7                                                                      gRTC_Month=1;
 238   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 5   

 239   7                                                              break;
 240   7                                                      }
 241   6                                                      case ADJ_DAY://ÉèÖÃÈÕÆÚ
 242   6                                                      {
 243   7                                                              gRTC_Day++;
 244   7                                                              if(gRTC_Month==2)
 245   7                                                              {
 246   8                                                                      if(Flag_LeapYear==1)//ÈòÄê
 247   8                                                                      {
 248   9                                                                              if(gRTC_Day>29)
 249   9                                                                                      gRTC_Day=1;
 250   9                                                                      }
 251   8                                                                      else
 252   8                                                                      {
 253   9                                                                              if(gRTC_Day>28)
 254   9                                                                                      gRTC_Day=1;
 255   9                                                                      }
 256   8                                                              }
 257   7                                                              else if((gRTC_Month==4) || (gRTC_Month==6)|| (gRTC_Month==9)|| (gRTC_Month==11))
 258   7                                                              {
 259   8                                                                      if(gRTC_Day>30)
 260   8                                                                              gRTC_Day=1;
 261   8                                                              }
 262   7                                                              else
 263   7                                                              {
 264   8                                                                      if(gRTC_Day>31)
 265   8                                                                              gRTC_Day=1;
 266   8                                                              }
 267   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 268   7                                                              break;
 269   7                                                      }
 270   6                                                      case ADJ_HOUR: //ÉèÖÃRTCÐ¡Ê±
 271   6                                                      {
 272   7                                                              if(++gRTC_Hour>23)
 273   7                                                                      gRTC_Hour=0;
 274   7              //                                              if (Flag_12HourDisplay)//12Ð¡Ê±ÖÆÏÔÊ¾
 275   7              //                                              {
 276   7              //                                                      if(gRTC_Hour<12)//Èç¹ûÐ¡ÓÚ12ÔòÊÇÁè³¿0µãµ½11:59£¬ÎªÉÏÎç
 277   7              //                                                      {
 278   7              //                                                              Flag_APM=0;  //ÉÏÎç
 279   7              //                                                      }
 280   7              //                                                      else if (gRTC_Hour > 12)  
 281   7              //                                                      {
 282   7              //                                                              Flag_APM = 1;   //Èç¹û´óÓÚ12ÔòÊÇ12:00µ½23:59£¬ÎªÏÂÎç//±êÖ¾Î»Îª1£¬ÉèÖÃ¶ÔÓ¦µÄLEDÊÇ·ñÁÁÆð
 283   7              //                                                              gRTC_Hour -= 12;//ÒòÎªÊÇ12Ð¡Ê±ÖÆ£¬ËùÒÔÏÂÎçµÄÊ±¼äÒ²ÊÇ12Ð¡Ê±ÖÆÏÔÊ¾£¬Òª¼õ12
 284   7              //                                                      }
 285   7              //                                                      if (gRTC_Hour == 0) //ÁãµãÊÇÏÔÊ¾12µÄ£¬ÖÐÎç12µãÒ²ÊÇÏÔÊ¾12µÄ
 286   7              //                                                      {
 287   7              //                                                              gRTC_Hour = 12;
 288   7              //                                                      }
 289   7              //                                              }
 290   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 291   7                                                              break;
 292   7                                                      }
 293   6                                                      case ADJ_MINUTE://ÉèÖÃRTC·ÖÖÓ
 294   6                                                      {
 295   7                                                              if(++gRTC_Minute>59)
 296   7                                                                      gRTC_Minute=0;
 297   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 298   7                                                              break;
 299   7                                                      }
 300   6                                                      case ADJ_DAYLIGHT_SAVING_ZONES://ÉèÖÃÏÄÁîÊ±Çø
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 6   

 301   6                                                      {
 302   7                                                              if(++gRTC_Zone>7)
 303   7                                                                      gRTC_Zone=1;
 304   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 305   7                                                              break;
 306   7                                                      }
 307   6                                                      case ADJ_SNOOZE_TIME://ÉèÖÃÌ°Ë¯Ê±¼ä
 308   6                                                      {
 309   7                                                              if(++AL1_TD.snoozeTime>10)
 310   7                                                                      AL1_TD.snoozeTime=1;
 311   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 312   7                                                              break;
 313   7                                                      }
 314   6                                                      case ADJ_ALARM1_HOUR: //ÉèÖÃÄÖÖÓÐ¡Ê±
 315   6                                                              if(++AL1_TD.hour>23)
 316   6                                                                      AL1_TD.hour=0;
 317   6                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 318   6                                                              break;
 319   6                                                      case ADJ_ALARM1_MINUTE: //ÉèÖÃÄÖÖÓ·ÖÖÓ
 320   6                                                              if(++AL1_TD.minute>59)
 321   6                                                                      AL1_TD.minute=0;
 322   6                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 323   6                                                              break;
 324   6                                                      default:
 325   6                                                              break;
 326   6                                              }
 327   5                                              cntNoFlash=cDISP_DELAY_500ms;//Ã¿´Î½øÀ´¾ÍÓÐ1s²»ÉÁË¸£¬ÎªÁËÔÚ³¤°´Ôö¼Ó/¼õÐ¡Ê±µÚÒ»´Î½øÀ´ÊÇKU(),µÚ¶þ´Î²ÅÊÇ
             -KR()
 328   5                                      }
 329   4                                      break;
 330   4                              }
 331   3                              case KU(K_VOLDEC): //value68
 332   3                              case KR(K_VOLDEC): //value132
 333   3                              {
 334   4                                      if(Flag_DisplayStatus==0)//Îª0ËµÃ÷²»ÊÇÆäËû²Ù×÷£¬ÊÇÒôÁ¿²Ù×÷
 335   4                                      {
 336   5                                              bt_cmd=BT_VOLDEC;//ÒôÁ¿¼õ
 337   5                                      }
 338   4                                      else
 339   4                                      {
 340   5                                              switch(Flag_DisplayStatus)
 341   5                                              {
 342   6                                                      case ADJ_YEAR://ÉãÖÆÄê·Ý
 343   6                                                      {
 344   7                                                              if(--gRTC_Year < 18)
 345   7                                                                      gRTC_Year=99;
 346   7                                                              if(gRTC_Month==2)
 347   7                                                              {
 348   8                                                                      if((gRTC_Year % 4) ==0)//ÕâÀïÊýÖµÊÇ2018-2099£¬ËùÒÔ²»ÓÃ"gRTC_Year % 100"
 349   8                                                                      {
 350   9                                                                              Flag_LeapYear=1;//ÈòÄê
 351   9                                                                      }
 352   8                                                                      else
 353   8                                                                      {
 354   9                                                                              Flag_LeapYear=0;
 355   9                                                                      }
 356   8                                                              }
 357   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 358   7                                                              break;
 359   7                                                      }
 360   6                                                      case ADJ_MONTH://ÉèÖÃÔÂ·Ý
 361   6                                                      {
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 7   

 362   7                                                              if(--gRTC_Month<1)
 363   7                                                                      gRTC_Month=12;
 364   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 365   7                                                              break;
 366   7                                                      }
 367   6                                                      case ADJ_DAY://ÉèÖÃÈÕÆÚ
 368   6                                                      {
 369   7                                                              if(--gRTC_Day<1)
 370   7                                                              {
 371   8                                                                      if(gRTC_Month==2)
 372   8                                                                      {
 373   9                                                                              if(Flag_LeapYear==1)
 374   9                                                                                      gRTC_Day=29;    //ÈòÄê
 375   9                                                                              else
 376   9                                                                                      gRTC_Day=28;
 377   9                                                                      }
 378   8                                                                      else if((gRTC_Month==4) || (gRTC_Month==6)|| (gRTC_Month==9)|| (gRTC_Month==11))
 379   8                                                                              gRTC_Day=30;
 380   8                                                                      else
 381   8                                                                              gRTC_Day=31;
 382   8                                                              }
 383   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 384   7                                                              break;
 385   7                                                      }
 386   6                                                      case ADJ_HOUR://ÉèÖÃRTCÐ¡Ê±
 387   6                                                      {
 388   7                                                              if(--gRTC_Hour<0)
 389   7                                                                      gRTC_Hour=23;
 390   7              //                                              if (Flag_12HourDisplay)//12Ð¡Ê±ÖÆÏÔÊ¾
 391   7              //                                              {
 392   7              //                                                      if(gRTC_Hour<12)//Èç¹ûÐ¡ÓÚ12ÔòÊÇÁè³¿0µãµ½11:59£¬ÎªÉÏÎç
 393   7              //                                                      {
 394   7              //                                                              Flag_APM=0;  //ÉÏÎç
 395   7              //                                                      }
 396   7              //                                                      else if (gRTC_Hour > 12)  
 397   7              //                                                      {
 398   7              //                                                              Flag_APM = 1;   //Èç¹û´óÓÚ12ÔòÊÇ12:00µ½23:59£¬ÎªÏÂÎç//±êÖ¾Î»Îª1£¬ÉèÖÃ¶ÔÓ¦µÄLEDÊÇ·ñÁÁÆð
 399   7              //                                                              gRTC_Hour -= 12;//ÒòÎªÊÇ12Ð¡Ê±ÖÆ£¬ËùÒÔÏÂÎçµÄÊ±¼äÒ²ÊÇ12Ð¡Ê±ÖÆÏÔÊ¾£¬Òª¼õ12
 400   7              //                                                      }
 401   7              //                                                      if (gRTC_Hour == 0) //ÁãµãÊÇÏÔÊ¾12µÄ£¬ÖÐÎç12µãÒ²ÊÇÏÔÊ¾12µÄ
 402   7              //                                                      {
 403   7              //                                                              gRTC_Hour = 12;
 404   7              //                                                      }
 405   7              //                                              }
 406   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 407   7                                                              break;
 408   7                                                      }
 409   6                                                      case ADJ_MINUTE://ÉèÖÃRTC·ÖÖÓ
 410   6                                                      {
 411   7                                                              if(--gRTC_Minute<0)
 412   7                                                                      gRTC_Minute=59;
 413   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 414   7                                                              break;
 415   7                                                      }
 416   6                                                      case ADJ_DAYLIGHT_SAVING_ZONES:  //ÏÄÁîÊ±ÇøÑ¡Ôñ
 417   6                                                      {
 418   7                                                              if(--gRTC_Zone<1)
 419   7                                                                      gRTC_Zone=7;
 420   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 421   7                                                              break;
 422   7                                                      }
 423   6                                                      case ADJ_SNOOZE_TIME://ÉèÖÃÌ°Ë¯Ê±¼ä
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 8   

 424   6                                                      {
 425   7                                                              if(--AL1_TD.snoozeTime<1)
 426   7                                                                      AL1_TD.snoozeTime=10;
 427   7                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 428   7                                                              break;
 429   7                                                      }
 430   6                                                      case ADJ_ALARM1_HOUR: //ÉèÖÃÄÖÖÓÐ¡Ê±
 431   6                                                              if(--AL1_TD.hour<0)
 432   6                                                                      AL1_TD.hour=23;
 433   6                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 434   6                                                              break;
 435   6                                                      case ADJ_ALARM1_MINUTE: //ÉèÖÃÄÖÖÓ·ÖÖÓ
 436   6                                                              if(--AL1_TD.minute<0)
 437   6                                                                      AL1_TD.minute=59;
 438   6                                                              cntDisplayStatus=cDISP_DELAY_5SEC;
 439   6                                                              break;
 440   6                                                      default:
 441   6                                                              break;
 442   6                                              }
 443   5                                              cntNoFlash=cDISP_DELAY_500ms;//Ã¿´Î½øÀ´¾ÍÓÐ1s²»ÉÁË¸£¬ÎªÁËÔÚ³¤°´Ôö¼Ó/¼õÐ¡Ê±µÚÒ»´Î½øÀ´ÊÇKU(),µÚ¶þ´Î²ÅÊÇ
             -KR()
 444   5                                      }
 445   4                                      break;
 446   4                              }
 447   3                              case KU(K_SNOOZE_DIMMER): 
 448   3                              {
 449   4                                      if((AL1_TD.OnOff_TD==ALARM_ON) && (AL1_TD.RingRun_TD==ALARM_RING_RUN_ON))//ÄÖÖÓ¿ªÆô£¬²¢ÇÒÔÚÔËÐÐ
 450   4                                      {
 451   5                                              AL1_TD.Snooze_TD=ALARM_SNOOZE_ON;//¿ªÆôÌ°Ë¯
 452   5                                              
 453   5                                              /*******************************************************************************
 454   5                                              *¹¦ÄÜ£ºgRTC_MinuteÐ¡ÓÚ50Ê±£¬×î´óÎª49£¬Èç¹ûÌ°Ë¯Ê±¼äÎª10£¬AL1_TD.snoozeMinute+gRTC_Minute
 455   5                                              *       Îª59£¬Ã»ÓÐ²úÉú½øÎ»£¬
 456   5                                              *       
 457   5                                              *       Èç¹û´óÓÚµÈÓÚ50,¸ù¾ÝAL1_TD.snoozeMinuteµÄ1~10·ÖÖÓ¿ÉÄÜ»á½øÎ»
 458   5                                              ********************************************************************************/
 459   5                                              if(gRTC_Minute<50)
 460   5                                              {
 461   6                                                      AL1_TD.snoozeRTCHour=gRTC_Hour;
 462   6                                                      AL1_TD.snoozeRTCMinute=gRTC_Minute+AL1_TD.snoozeTime;
 463   6                                              }
 464   5                                              else if(gRTC_Minute>=50)
 465   5                                              {
 466   6                                                      /*******************************************************************************
 467   6                                                      *¹¦ÄÜ£ºÈç¹ûgRTC_Minute+AL1_TD.snoozeMinuteÎª60£¬ËµÃ÷²úÉúÁË½øÎ»£¬Ì°Ë¯Ê±¼äµ½ÁËµÄ·Ö
 468   6                                                      *       ÖÓÎª(gRTC_Minute+AL1_TD.snoozeMinute)-60£¬Ð¡Ê±ÔÚgRTC_HourÉÏ¼Ó1£¬Èç¹û¼ÓÁË1µÈ
 469   6                                                      *       ÓÚ24£¬ÄÇ¾ÍÊÇÁè³¿Áãµã£¬°ÑAL1_TD.snoozeRTCHour=0
 470   6                                                      *
 471   6                                                      *
 472   6                                                      ********************************************************************************/
 473   6                                                      if((gRTC_Minute+AL1_TD.snoozeTime)>=60)
 474   6                                                      {
 475   7                                                              AL1_TD.snoozeRTCMinute=(gRTC_Minute+AL1_TD.snoozeTime)-60;
 476   7                                                              AL1_TD.snoozeRTCHour=gRTC_Hour+1;
 477   7                                                              if(AL1_TD.snoozeRTCHour>23)
 478   7                                                                      AL1_TD.snoozeRTCHour=0;
 479   7                                                      }
 480   6                                                      else if((gRTC_Minute+AL1_TD.snoozeTime)<60)
 481   6                                                      {
 482   7                                                              AL1_TD.snoozeRTCHour=gRTC_Hour;
 483   7                                                              AL1_TD.snoozeRTCMinute=gRTC_Minute+AL1_TD.snoozeTime;
 484   7                                                      }
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 9   

 485   6                                              }
 486   5                                              break;
 487   5                                      }
 488   4                                      else if(Flag_DisplayStatus==0)
 489   4                                      {
 490   5                                              if(gbDimmer==18)//ÕâÀïÐÎ³ÉÈý¼¶µ÷¹â
 491   5                                                      gbDimmer=10;
 492   5                                              else if(gbDimmer==10)
 493   5                                                      gbDimmer=6;
 494   5                                              else if(gbDimmer==6)
 495   5                                                      gbDimmer=18;
 496   5                                      }
 497   4                                      break;
 498   4                              }
 499   3                              case KH(K_SNOOZE_DIMMER):
 500   3                              {
 501   4                                      bt_cmd=BT_PLAY_PAUSE;
 502   4                                      break;
 503   4                              }
 504   3                              case KU(K_ALARM): 
 505   3                              {
 506   4                                      /*ÄêÔÂÈÕ¡¢RTCÊ±¼ä¡¢ÏÄÁîÊ±ÇøºÍÌ°Ë¯Ê±¼äÉèÖÃ*/
 507   4                                      cntNoFlash=cDISP_DELAY_500ms;//Ã¿´Î½øÀ´¾ÍÓÐ1s²»ÉÁË¸£¬ÎªÁËÔÚ³¤°´Ôö¼Ó/¼õÐ¡Ê±µÚÒ»´Î½øÀ´ÊÇKU(),µÚ¶þ´Î²ÅÊÇK
             -R()
 508   4                                      if(Flag_DisplayStatus==ADJ_YEAR)//
 509   4                                      {
 510   5                                              SetDisplayState2s(ADJ_MONTH);//ÉèÖÃÔÂ·Ý
 511   5                                              gRTC_Sec = 0;
 512   5                                      }
 513   4                                      else if(Flag_DisplayStatus==ADJ_MONTH)//
 514   4                                      {
 515   5                                              SetDisplayState2s(ADJ_DAY);//ÉèÖÃÈÕÆÚ
 516   5                                              gRTC_Sec = 0;
 517   5                                      }
 518   4                                      else if(Flag_DisplayStatus==ADJ_DAY)//
 519   4                                      {
 520   5                                              SetDisplayState2s(ADJ_HOUR);//ÉèÖÃÐ¡Ê±
 521   5                                              gRTC_Sec = 0;
 522   5                                      }
 523   4                                      else if(Flag_DisplayStatus==ADJ_HOUR)//
 524   4                                      {
 525   5                                              SetDisplayState2s(ADJ_MINUTE);//ÉèÖÃ·ÖÖÓ
 526   5                                              gRTC_Sec = 0;
 527   5                                      }
 528   4                                      else if(Flag_DisplayStatus==ADJ_MINUTE)//
 529   4                                      {
 530   5                                              SetDisplayState2s(ADJ_DAYLIGHT_SAVING_ZONES);//ÉèÖÃÏÄÁîÊ±È¥Ñ¡Ôñ
 531   5                                              gRTC_Sec = 0;
 532   5                                      }
 533   4                                      else if(Flag_DisplayStatus==ADJ_DAYLIGHT_SAVING_ZONES)//
 534   4                                      {
 535   5                                              SetDisplayState2s(ADJ_SNOOZE_TIME);//ÉèÖÃÌ°Ë¯Ê±¼ä
 536   5                                              gRTC_Sec = 0;
 537   5                                      }
 538   4                                      
 539   4                                      /*ÉèÖÃÄÖÖÓ*/
 540   4                                      if((AL1_TD.OnOff_TD==ALARM_ON) && (Flag_DisplayStatus==0))
 541   4                                      {
 542   5                                              //Èç¹ûÄÖÖÓÔÚ´ò¿ª×´Ì¬£¬µ«ÊÇ»¹Ã»ÓÐÏìÄÖ£¬¶Ì°´ALARM¾Í¹Ø±Õ
 543   5                                              Alarm1PowerOFF();
 544   5                                      }
 545   4                                      else if((AL1_TD.OnOff_TD==ALARM_ON) && (AL1_TD.RingRun_TD==ALARM_RING_RUN_ON))
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 10  

 546   4                                      {
 547   5                                              //Èç¹ûÄÖÖÓÔÚÔËÐÐ£¬ÄÇ¶Ì°´ALARM¼ü¹Ø±ÕÄÖÖÓ
 548   5                                              Alarm1PowerOFF();
 549   5                                      }
 550   4                                      else if((Flag_DisplayStatus==0) && (AL1_TD.OnOff_TD==ALARM_OFF))
 551   4                                      {
 552   5                                              SetDisplayState2s(ADJ_ALARM1_HOUR);//ÉèÖÃÄÖÖÓÐ¡Ê±
 553   5                                              AL1_TD.OnOff_TD=ALARM_ON;//¿ªÄÖÖÓ
 554   5                                      }
 555   4                                      else if(Flag_DisplayStatus==ADJ_ALARM1_HOUR)
 556   4                                      {
 557   5                                              SetDisplayState2s(ADJ_ALARM1_MINUTE);//ÉèÖÃÄÖÖÓÐ¡Ê±
 558   5                                      }
 559   4                                      else if(Flag_DisplayStatus==ADJ_ALARM1_MINUTE)
 560   4                                      {
 561   5                                              Flag_DisplayStatus=0;//È·ÈÏÄÖÖÓÊ±¼ä,
 562   5                                              cntDisplayStatus=0;//²»ÉÁË¸£¬
 563   5                                              cntNoFlash=0;//
 564   5                                      }
 565   4                                      break;
 566   4                              }
 567   3                              case KH(K_ALARM):
 568   3                              {
 569   4                                      
 570   4                                      break;
 571   4                              }
 572   3                              case KR(K_AL_SN):
 573   3                              {
 574   4                                      if(cntKeyLong>=5)//³¤°´1sÉèÖÃRTCÊ±¼ä
 575   4                                      {
 576   5                                              SetDisplayState2s(ADJ_YEAR);
 577   5                                              gRTC_Sec = 0;
 578   5                                      }
 579   4                                      break;
 580   4                              }
 581   3                              default:
 582   3                                      break;
 583   3                      }
 584   2              }
 585   1      }
 586          
 587          
 588          
 589          
 590          
 591          
 592          
 593          
 594          
 595          
 596          
 597          
 598          
 599          
 600          
 601          
 602          
 603          
 604          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.00   KEY_MODE                                                              12/10/2018 10:01:34 PAGE 11  

   CODE SIZE        =   1111    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
